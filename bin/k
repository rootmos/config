#!/bin/bash

set -o nounset -o pipefail -o errexit

export K_DIR=$(readlink -f "$(pwd)")
K=.k
while getopts "k:eg-cCmhd:" OPT; do
    case "$OPT" in
        k) K=$OPTARG ;;
        d) cd "$OPTARG" ;;
        h) ACTION=usage ;;
        e) ACTION=edit ;;
        g) ACTION=go ;;
        c) ACTION=completion-script; COMPLETE_NAME=$(basename "$0") ;;
        C) ACTION=completions ;;
        m) ACTION=menu ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

if [[ ! -v ACTION ]]; then
    if [ "$#" -eq 0 ]; then
        if [ -t 0 ]; then
            ACTION=edit
        else
            ACTION=menu
        fi
    else
        ACTION=go
    fi
fi


if [ "$ACTION" = "usage" ]; then
    cat <<EOF 1>&2
$(basename "$0")

user actions:
    -g      go (default)
    -e      edit
    -h      show this message
    -m      display menu (using dmenu)

script usage:
    -c      completion script
    -C      list completions

options:
    -d DIR  change directory to DIR
EOF
fi

if [ "$ACTION" = "completion-script" ]; then
    cat <<EOF
complete -C '"$0" -C' "$COMPLETE_NAME"
EOF
elif [ "$ACTION" = "menu" ]; then
    "$0" -C | dmenu -p "k ($K_DIR):" | exec env xargs "$0" -g
else
    if [ ! -x "$K" ]; then
        cat <<EOF > "$K"
# a function f defined here can be called from the command line as: k f
EOF
        chmod +x "$K"
    fi
    case "$ACTION" in
        edit) $EDITOR +"set ft=sh" "$K" < /dev/tty ;;
        go) exec $SHELL -c ". \"$K\" && \$@" "$K" "$@" ;;
        completions)
            $SHELL -r -c ". \"$K\" && declare -F | cut -f3 -d' '" "$K" \
                | grep -vf <($SHELL -r -c 'declare -F | cut -f3 -d" "') \
                | grep "^${2-}"
            ;;
    esac
fi
