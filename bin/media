#!/bin/bash

set -o nounset -o pipefail -o errexit

IMAGES=
VIDEOS=
QUICK=
DIR=
ZERO=
while getopts "ivqdz-" OPT; do
    case $OPT in
        i) IMAGES=1 ;;
        v) VIDEOS=1 ;;
        q) QUICK=1 ;;
        d) DIR=1 ;;
        z) ZERO=1 ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

OPTS=(-false)
if [ -n "$IMAGES" ]; then
    OPTS+=(-or -iname '*.jpg' -or -iname '*.jpeg' -or -iname '*.png')
fi

if [ -n "$VIDEOS" ]; then
    OPTS+=(-or -iname '*.avi' -or -iname '*.mkv' -or -iname '*.webm')
    OPTS+=(-or -iname '*.mp4' -or -iname '*.mov' -or -iname '*.wmv')
    OPTS+=(-or -iname '*.m4v' -or -iname '*.m4a' -or -iname '*.ogm')
fi

run_find() {
    if [ -e "$1" ]; then
        find "$1" -type f \( "${OPTS[@]}" \) -exec readlink -zf {} \;
    fi
}

loop() {
    for i in "$@"; do
        if [ -p "$i" ]; then
            FT=text/plain
        else
            FT=$(file --brief --mime-type "$i")
        fi

        case "$FT" in
            text/*)
                cat "$i" | while read -r j; do
                    if [ -n "$QUICK" ]; then
                        run_find "$j"
                    else
                        loop "$j"
                    fi
                done
                ;;
            image/*|video/*) printf '%s\0' "$i" ;;
            inode/directory) run_find "$i" ;;
            inode/x-empty) ;;
            inode/symlink) loop "$(readlink -f "$i")" ;;
            *) echo "unsupported filetype: $FT" 1>&2; exit 1 ;;
        esac
    done
}

finalize() {
    if [ -n "$ZERO" ]; then
        sort -zu
    else
        sort -zu | tr '\0' '\n'
    fi
}

if [ -z "$DIR" ]; then
    loop "$@"
else
    loop "$@" | tr '\n' '\0' | xargs -0n1 dirname -z
fi | finalize
