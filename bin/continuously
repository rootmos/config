#!/bin/bash

set -o nounset -o pipefail -o errexit

TMP=$(mktemp -d)
trap 'rm -rf $TMP' EXIT

WRAPPER=$(pwd)/.k
while getopts "t:w:-" OPT; do
    case $OPT in
        t) echo -ne "$OPTARG\0" >> "$TMP/targets" ;;
        w) WRAPPER=$OPTARG ;;
        -) break ;;
        \?) echo "Invalid option: -$OPTARG" >&2; exit 2 ;;
    esac
done
shift $((OPTIND-1))

manual_waiter() {
    read -sp "[wait] " < /dev/tty
    kill $(<"$TMP/file.pid")
    echo 1>&2 "[manual trigger]"
}

files() {
    xargs -0 -a "$TMP/targets" -L1 sh -c '(cd "$0" && git ls-files -z 2>/dev/null | xargs -0 readlink -zf) || echo -ne "$0\0"'
}

file_waiter() {
    files | tr '\0' '\n' | inotifywait --fromfile=- -e close_write,moved_to,move_self --format="%f" --quiet
    kill $(<"$TMP/manual.pid")
    echo 1>&2 "[file trigger]"
}

if [ ! -f "$TMP/targets" ]; then
    echo -ne ".\0" > "$TMP/targets"
fi

trap 'find "$TMP" -name "*.pid" -exec killall -q {} \; ; echo' INT

while true; do
    manual_waiter &
    echo "$!" > "$TMP/manual.pid"
    file_waiter &
    echo "$!" > "$TMP/file.pid"

    wait

    ( if [ -f "$WRAPPER" ]; then /bin/sh "$WRAPPER" $*; else $*; fi ) &
    echo "$!" > "$TMP/child.pid"
    set +o errexit
    wait
    EC=$?
    set -o errexit
    if [ "$EC" -ne 0 ]; then
        echo "non-zero exit code: $EC" 1>&2
    fi
done
