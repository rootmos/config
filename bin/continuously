#!/bin/bash

set -o nounset -o pipefail -o errexit

TMP=$(mktemp -d)
trap 'rm -rf $TMP' EXIT

usage() {
    cat <<EOF 1>&2
Usage: $(basename "$0") [options] -- ...
Options:
    -h        show this message
    -f FILE   track changes in FILE
    -D DELAY  delay execution by DELAY seconds
EOF
    exit "${1-0}"
}

ACTION=run
TARGETS=()
AUX_TARGETS=(".k")
DELAY=0.1s
while getopts "f:cD:h-" OPT; do
    case $OPT in
        f) TARGETS+=("$OPTARG") ;;
        c) ACTION=completion-script; COMPLETE_NAME=$(basename "$0") ;;
        D) DELAY=$OPTARG ;;
        h) usage ;;
        -) break ;;
        ?) usage 2 ;;
    esac
done
shift $((OPTIND-1))

if [ "$ACTION" = "completion-script" ]; then
    cat <<EOF
_continuously_completion() {
}
complete -F _continuously_completion "$COMPLETE_NAME"
EOF
fi

manual_waiter() {
    read -rsp "[wait] " < /dev/tty
    kill "$(<"$TMP/file.pid")"
    echo 1>&2 "[manual trigger]"
}

files() {
    for f in "${TARGETS[@]}"; do
        if [ -d "$f" ]; then
            (
                cd "$f"
                git ls-files -z \
                    --cached --others --exclude-standard 2>/dev/null \
                    | xargs -0 readlink -f
            ) || find "$f" -type f -exec readlink -f {} \;

            for t in "${AUX_TARGETS[@]}"; do
                find "$f" -name "$t"
            done
        else
            readlink -f "$f"
        fi
    done
}

file_waiter() {
    files | inotifywait --fromfile=- --format="%f" --quiet \
        -e close_write,moved_to,move_self
    kill "$(<"$TMP/manual.pid")"
    echo 1>&2 "[file trigger]"
}

if [ "${#TARGETS[@]}" -eq 0 ]; then
    TARGETS+=(".")
fi

trap 'find "$TMP" -name "*.pid" -exec killall -q {} \; ; echo' INT

while true; do
    manual_waiter &
    echo "$!" > "$TMP/manual.pid"
    file_waiter &
    echo "$!" > "$TMP/file.pid"

    wait

    sleep "$DELAY"
    ( "$@" ) &
    echo "$!" > "$TMP/child.pid"
    set +o errexit
    wait -n
    EC=$?
    set -o errexit
    if [ "$EC" -ne 0 ]; then
        echo "non-zero exit code: $EC" 1>&2
    fi
done
