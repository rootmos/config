#!/bin/bash

set -o nounset -o pipefail -o errexit

MARK_FILE=$HOME/.mark

usage() {
    cat <<EOF 1>&2
Usage: $(basename "$0") [options]
Options:
    -h      show this message
    -m DATE set DATE as the mark
    -s      stop
    -g      launch a graphical timer
    -f FONT use the specified font in the graphical timer
EOF
    exit "${1-0}"
}

FONT=
ACTION=show
FORMAT=human
INTERVAL=60s
while getopts "m:sf:gnI:Sh" OPT; do
    case $OPT in
        m) date --date="$OPTARG" > "$MARK_FILE" ;;
        s) rm -f "$MARK_FILE" ;;
        f) FONT=$OPTARG ;;
        g) ACTION=graphical ;;
        n) ACTION=notification ;;
        I) INTERVAL=$OPTARG ;;
        S) FORMAT=seconds ;;
        h) usage 0 ;;
        ?) usage 2 ;;
    esac
done
shift $((OPTIND-1))

if [ ! -f "$MARK_FILE" ]; then
    exit 1
fi

seconds_to_duration() {
    S=$1
    if [ "$S" -lt 0 ]; then
        SIGN=-
        S=$((-1*S))
    else
        SIGN=
    fi
    echo "$SIGN$(date -d@"$S" -u +%H:%M:%S)"
}

show() {
    NOW=$(date +%s)
    MARK=$(date +%s --date="$(cat "$MARK_FILE")")
    DIFF=$((NOW-MARK))
    case "$FORMAT" in
        human) seconds_to_duration "$DIFF" ;;
        seconds) echo "$DIFF" ;;
    esac
}

if [ "$ACTION" = "graphical" ]; then
    (show; while sleep 1; do show; done) | xpanel -a SE
elif [ "$ACTION" = "notification" ]; then
    NOTIFICATION_ID=$RANDOM
    while true; do
        dunstify --replace="$NOTIFICATION_ID" \
            --appname=countdown --timeout=2000 \
            -- "$(show)"
        sleep "$INTERVAL"
    done
elif [ "$ACTION" = "show" ]; then
    show
fi
